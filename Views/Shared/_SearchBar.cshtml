@using PhotosManager.Models
@{
    string keywords = Session["searchKeywords"]?.ToString() ?? "";
    int selectedUserId = Session["photoOwnerSearchId"] != null ? (int)Session["photoOwnerSearchId"] : 0;
    List<User> users = DB.Users.ToList().Where(u => !u.Blocked).OrderBy(u => u.Name).ToList();
}

<form id="searchForm" onsubmit="submitSearchForm(event)">
    <div id="search" style="display:grid; grid-template-columns:auto auto auto; gap:8px;">
        <input type="search"
               name="searchToken"
               placeholder="mot-clé"
               class="form-control"
               value="@keywords" />

        <select name="selectedUserId"
                class="form-control"
                id="selectedUserId">
            <option value="0" @(selectedUserId == 0 ? "selected" : "")>Toutes les photos</option>
            <option value="1" @(selectedUserId == 1 ? "selected" : "")>Mes photos</option>
            <option disabled>──────────</option>

            @foreach (var user in users)
            {
                int photoCount = DB.Photos.ToList().Count(p => p.OwnerId == user.Id);
                if (photoCount > 0)
                {
                    <option value="@user.Id" @(user.Id == selectedUserId ? "selected" : "")>
                        @user.Name (@photoCount)
                    </option>
                }
            }
        </select>

        <div class="menu-icon-layout" style="display:flex; align-items:center;">
            <a href="javascript:void(0);" onclick="hideSearchBar()" class="cmdIcon fa fa-times" title="Fermer"></a>
        </div>
    </div>
</form>
